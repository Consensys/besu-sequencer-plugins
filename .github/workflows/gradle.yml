name: gradle

on:
  push:
    branches:
      - cicd-test
  pull_request:
    branches:
      - cicd-test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build without tests
        run: ./gradlew build -x test -x spotlessCheck
        env:
          JAVA_OPTS: -Xmx2g -Dorg.gradle.daemon=false

  unitTests:
    strategy:
      matrix:
        task: [unitTests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run Test Suite
        run: ./gradlew ${{ matrix.task }}
        env:
          JAVA_OPTS: -Xmx2g -Dorg.gradle.daemon=false

  corsetTest:
    strategy:
      matrix:
        task: [corsetTests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Check Corset
        id: corset-check
        run: ./gradlew checkCorsetPreConditions
        env:
          JAVA_OPTS: -Xmx2g -Dorg.gradle.daemon=false

      - name: Run Test Suite
        run: ./gradlew ${{ matrix.task }}
        if: always() && needs.corset-check.result == 'success'
        env:
          JAVA_OPTS: -Xmx2g -Dorg.gradle.daemon=false
